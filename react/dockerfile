# Use the official Node.js image with version 20.12.2 as the base image
FROM node:20.12.2-alpine

# Set the working directory
WORKDIR /app

# Copy package.json and package-lock.json files
COPY package.json package-lock.json ./

# Install Node.js dependencies
RUN npm install

# Copy the rest of the application code
COPY . .

# Copy the fetch_secret.py script
COPY fetch_secret.py .

# Install Python and necessary dependencies
RUN apk add --no-cache python3 py3-pip gcc musl-dev libffi-dev

# Create a virtual environment for Python dependencies within the app directory
RUN python3 -m venv /app/venv

# Activate virtual environment and install the google-cloud-secret-manager package
RUN /app/venv/bin/pip install google-cloud-secret-manager google-auth

# Ensure the virtual environment is activated for subsequent commands
ENV PATH="/app/venv/bin:$PATH"

# Set environment variables for fetching the secret
ENV PROJECT_NUMBER="580004149041"
ENV SECRET_ID="multiple_sigeti-bq-para-run"
ENV VERSION_ID="latest"
ENV DESTINATION_FILE="/app/sigeti-dee63dd3ec66.json"

# Set environment variables for the service account key (assuming it's a secret)
# No need to fetch the service account key separately now, it's provided as an environment variable

# Fetch the service account key from Secret Manager and save it to the correct location
RUN python fetch_secret.py

# Set environment variables for the service account key
ENV GOOGLE_APPLICATION_CREDENTIALS="/app/sigeti-dee63dd3ec66.json"

# Build the Next.js application
RUN npm run build

# Expose the port Next.js will run on
EXPOSE 3000

# Start the Next.js application
CMD ["npm", "start"]
